>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13, 16]]

>>> print(matrix_mul("string", [[3, 4]]))
Traceback (most recent call last):
TypeError: m_a must be a list or m_b must be a list

>>> print(matrix_mul([[1, 2]], "string"))
Traceback (most recent call last):
TypeError: m_a must be a list or m_b must be a list

>>> print(matrix_mul([1, 2], [[3, 4]]))
Traceback (most recent call last):
TypeError: m_a must be a list of lists or m_b must be a list of lists

>>> print(matrix_mul([[1, 2]], [3, 4]))
Traceback (most recent call last):
TypeError: m_a must be a list of lists or m_b must be a list of lists

>>> print(matrix_mul([[]], [[3, 4]]))
Traceback (most recent call last):
ValueError: m_a can't be empty or m_b can't be empty

>>> print(matrix_mul([[1, 2]], [[]]))
Traceback (most recent call last):
ValueError: m_a can't be empty or m_b can't be empty

>>> print(matrix_mul([[1, 2], [3, "4"]], [[5, 6], [7, 8]]))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats or m_b should contain only integers or floats

>>> print(matrix_mul([[1, 2], [3, 4]], [[5, "6"], [7, 8]]))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats or m_b should contain only integers or floats

>>> print(matrix_mul([[1, 2, 10], [3, 4]], [[5, 6], [7, 8]]))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size or each row of m_b must be of the same size

>>> print(matrix_mul([[1, 2], [3, 4]], [[5, 6, 10], [7, 8]]))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size or each row of m_b must be of the same size
